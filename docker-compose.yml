version: '3.4'
services:
  # Run browser-sync and compile static assets.
  #
  # This is the primary server and it proxies
  # the Django app so that it can add the fancy
  # browser refresh JS.
  web:
    build:
      context: .
      target: assets
    image: mozorg/bedrock_assets:latest
    command: npm run docker-start
    depends_on:
      - app
    ports:
      - "3000:3000"
      - "3001:3001"
    volumes:
      - ./media/:/app/media:cached
      - ./bedrock/:/app/bedrock:cached
    environment:
      BS_PROXY_URL: "app:8000"
      BS_OPEN_BROWSER: "false"

  # the django app
  app:
    build:
      context: .
      target: tester
      args:
        GIT_SHA: ${GIT_SHA:-latest}
        BRANCH_NAME: ${BRANCH_NAME:-latest}
    image: mozorg/bedrock_test:latest
    command: python manage.py runserver 0.0.0.0:8000
    env_file: .env
    ports:
      - "8000:8000"
    volumes:
      - ./bedrock/:/app/bedrock:cached
      - ./bin/:/app/bin:cached
      - ./docker/:/app/docker:cached
      - ./etc/:/app/etc:cached
      - ./lib/:/app/lib:cached
      - ./media/:/app/media:cached
      - ./root_files/:/app/root_files:cached
      - ./scripts/:/app/scripts:cached
      - ./vendor-local/:/app/vendor-local:cached
      - ./wsgi/:/app/wsgi:cached

  # run the tests against local changes
  test:
    image: mozorg/bedrock_test:latest
    env_file: docker/envfiles/test.env
    volumes:
      - ./bedrock/:/app/bedrock:cached
      - ./bin/:/app/bin:cached
      - ./docker/:/app/docker:cached
      - ./etc/:/app/etc:cached
      - ./lib/:/app/lib:cached
      - ./media/:/app/media:cached
      - ./root_files/:/app/root_files:cached
      - ./scripts/:/app/scripts:cached
      - ./test/:/app/test:cached
      - ./vendor-local/:/app/vendor-local:cached
      - ./wsgi/:/app/wsgi:cached

  # run tests with no volumes
  test-image:
    image: mozorg/bedrock_test:${GIT_COMMIT:-latest}
    env_file: docker/envfiles/test.env

  # the django app
  release:
    image: mozorg/bedrock:latest
    build: .
